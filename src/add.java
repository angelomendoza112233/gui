
import config.dbConnector;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author mendo
 */
public class add extends javax.swing.JFrame {

    /**
     * Creates new form add
     */
    public add() {
        initComponents();
    }
String destanation="";
File Selectedfile;
String oldpath;
String path;

public int FileExistenceChecker(String path) {
    File file = new File(path);
    String fileName = file.getName();
    Path filePath = Paths.get("src/images", fileName);
    
    boolean fileExists = Files.exists(filePath);
    return fileExists ? 1 : 0;
}
public ImageIcon ResizeImage(String imagePath, byte[] pic, JLabel label) {
    ImageIcon myImage = null;
    
    if (imagePath != null) {
        myImage = new ImageIcon(imagePath);
    } else if (pic != null) {
        myImage = new ImageIcon(pic);
    } else {
        return null; // No image to process
    }

    int newHeight = getHeightFromWidth(myImage.getIconWidth(), myImage.getIconHeight(), label.getWidth());
    Image img = myImage.getImage();
    Image newImg = img.getScaledInstance(label.getWidth(), newHeight, Image.SCALE_SMOOTH);
    ImageIcon resizedImage = new ImageIcon(newImg);
    
    return resizedImage;
}
public int getHeightFromWidth(int originalWidth, int originalHeight, int targetWidth) {
    if (originalWidth == 0) return originalHeight;
    return (originalHeight * targetWidth) / originalWidth;
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        logintext = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lastnametext = new javax.swing.JLabel();
        emailtext = new javax.swing.JLabel();
        cnumbertext = new javax.swing.JLabel();
        passwordtext = new javax.swing.JLabel();
        errorType = new javax.swing.JLabel();
        backlogin = new javax.swing.JLabel();
        passwordtext1 = new javax.swing.JLabel();
        firstname2 = new javax.swing.JTextField();
        lastname1 = new javax.swing.JTextField();
        email1 = new javax.swing.JTextField();
        phonenumber = new javax.swing.JTextField();
        acct = new javax.swing.JComboBox<>();
        pass = new javax.swing.JPasswordField();
        jButton2 = new javax.swing.JButton();
        fn = new javax.swing.JLabel();
        ln = new javax.swing.JLabel();
        pn1 = new javax.swing.JLabel();
        pw = new javax.swing.JLabel();
        errorLabelEmail = new javax.swing.JLabel();
        user = new javax.swing.JTextField();
        us = new javax.swing.JLabel();
        passwordtext2 = new javax.swing.JLabel();
        st = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        image = new javax.swing.JLabel();
        remove = new javax.swing.JButton();
        select = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(239, 232, 180));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        logintext.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        logintext.setText("CREATE AN ACCOUNT");
        jPanel2.add(logintext, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 12, -1, -1));

        jLabel1.setText("First Name");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(104, 50, -1, -1));

        lastnametext.setText("Last Name");
        jPanel2.add(lastnametext, new org.netbeans.lib.awtextra.AbsoluteConstraints(359, 50, -1, -1));

        emailtext.setText("Email");
        jPanel2.add(emailtext, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, 54, -1));

        cnumbertext.setText("Contact Number");
        jPanel2.add(cnumbertext, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 110, -1, -1));

        passwordtext.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        passwordtext.setText("Username");
        jPanel2.add(passwordtext, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 230, 190, -1));

        errorType.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jPanel2.add(errorType, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, 190, 10));

        backlogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/icons8-back-50 (1).png"))); // NOI18N
        backlogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backloginMouseClicked(evt);
            }
        });
        jPanel2.add(backlogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, -1, -1));

        passwordtext1.setText("Role");
        jPanel2.add(passwordtext1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 190, -1, -1));

        firstname2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        firstname2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        firstname2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                firstname2FocusLost(evt);
            }
        });
        firstname2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstname2ActionPerformed(evt);
            }
        });
        jPanel2.add(firstname2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 190, 30));

        lastname1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lastname1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lastname1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                lastname1FocusLost(evt);
            }
        });
        lastname1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastname1ActionPerformed(evt);
            }
        });
        jPanel2.add(lastname1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 70, 190, 30));

        email1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        email1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        email1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                email1FocusLost(evt);
            }
        });
        email1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                email1ActionPerformed(evt);
            }
        });
        jPanel2.add(email1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 190, 30));

        phonenumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        phonenumber.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        phonenumber.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                phonenumberFocusLost(evt);
            }
        });
        phonenumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phonenumberActionPerformed(evt);
            }
        });
        jPanel2.add(phonenumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 140, 190, 30));

        acct.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "(Choose account type)", "admin", "applicant", " ", " " }));
        acct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acctActionPerformed(evt);
            }
        });
        jPanel2.add(acct, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 190, 140, 20));

        pass.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pass.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                passFocusLost(evt);
            }
        });
        pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passActionPerformed(evt);
            }
        });
        jPanel2.add(pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, 190, 30));

        jButton2.setBackground(new java.awt.Color(155, 139, 105));
        jButton2.setText("Signup");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 290, 260, 20));
        jPanel2.add(fn, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 160, 10));
        jPanel2.add(ln, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, 190, 10));
        jPanel2.add(pn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 190, 160, 10));

        pw.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jPanel2.add(pw, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, 200, 10));
        jPanel2.add(errorLabelEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 190, 10));

        user.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        user.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        user.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                userFocusLost(evt);
            }
        });
        user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userActionPerformed(evt);
            }
        });
        jPanel2.add(user, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 250, 190, 30));
        jPanel2.add(us, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 270, 160, 20));

        passwordtext2.setText("Password");
        jPanel2.add(passwordtext2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 230, -1, -1));

        st.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "active", "pending" }));
        st.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stActionPerformed(evt);
            }
        });
        jPanel2.add(st, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 190, 140, -1));

        jLabel2.setText("status");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 184, -1, 30));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(image, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(image, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 60, 220, 200));

        remove.setText("REMOVE");
        jPanel2.add(remove, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 280, 100, 30));

        select.setText("SELECT");
        select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectActionPerformed(evt);
            }
        });
        jPanel2.add(select, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 280, 100, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 767, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
Color mycolor = new Color(202, 70, 70);
    Color headcolor = new Color(234, 207, 181);
    Color bodycolor = new Color(11, 180, 158);
    Color panel = new Color(162, 158, 152);
    private void backloginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backloginMouseClicked
        login log = new login();

        log.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backloginMouseClicked

    private void firstname2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstname2FocusLost
        String fname = firstname2.getText();

        if (fname.isEmpty()) {
            firstname2.setForeground(mycolor);
            fn.setText("This field is required");
            fn.setForeground(mycolor);
        } else {
            firstname2.setForeground(Color.BLACK);
            fn.setText("");
            fn.setForeground(mycolor);
        }

        firstname2.repaint();
    }//GEN-LAST:event_firstname2FocusLost

    private void firstname2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstname2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstname2ActionPerformed

    private void lastname1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lastname1FocusLost
        String lname = lastname1.getText();

        if (lname.isEmpty()) {

            lastname1.setForeground(mycolor);
            ln.setText("This field is required");
            ln.setForeground(mycolor);

        } else {
            lastname1.setForeground(Color.BLACK);
            ln.setText("");
            ln.setForeground(mycolor);
        }

        lastname1.repaint();
    }//GEN-LAST:event_lastname1FocusLost

    private void lastname1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastname1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastname1ActionPerformed

    private void email1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_email1FocusLost

        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";
        String emailInput = email1.getText();

        if (emailInput.isEmpty()) {

            errorLabelEmail.setText("Email is required");
            errorLabelEmail.setForeground(Color.getColor(emailInput, mycolor));

        } else if (!emailInput.matches(emailRegex)) {

            email1.setForeground(Color.getColor(emailInput, mycolor));
            errorLabelEmail.setText("Email is invalid");
            errorLabelEmail.setForeground(Color.getColor(emailInput, mycolor));
        } else if (emailExists(emailInput)) {

            email1.setForeground(Color.getColor(emailInput, mycolor));
            errorLabelEmail.setText("Email already exists");
            errorLabelEmail.setForeground(Color.getColor(emailInput, mycolor));

        } else {

            email1.setForeground(Color.GREEN);
            errorLabelEmail.setText("Email valid");
            errorLabelEmail.setForeground(Color.GREEN);
        }

        email1.repaint();

    }//GEN-LAST:event_email1FocusLost

    private void email1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_email1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_email1ActionPerformed

    private void phonenumberFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phonenumberFocusLost
        String phoneRegex = "^[0-9]{11}$";
        String phoneInput = phonenumber.getText();

        if (phoneInput.isEmpty()) {

            phonenumber.setForeground(mycolor);
            pn1.setText("Number is required");
            pn1.setForeground(mycolor);

        } else if (!phoneInput.matches(phoneRegex)) {

            phonenumber.setForeground(mycolor);
            pn1.setText("Number is invalid");
            pn1.setForeground(mycolor);
        } else {

            phonenumber.setForeground(Color.BLACK);
            pn1.setText("");

        }

        phonenumber.repaint();
    }//GEN-LAST:event_phonenumberFocusLost
private boolean emailExists(String email) {

        dbConnector con = new dbConnector();

        try {
            String query = "SELECT * FROM user WHERE u_email = ?";
            PreparedStatement pstmt = con.getConnection().prepareStatement(query);
            pstmt.setString(1, email.trim());
            ResultSet resultSet = pstmt.executeQuery();

            if (resultSet.next()) {

                return true;
            }

        } catch (SQLException ex) {
            System.out.println("" + ex);

        }

        return false;

    }
    private void phonenumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phonenumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phonenumberActionPerformed

    private void acctActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acctActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_acctActionPerformed

    private void passFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passFocusLost
        String passInput = pass.getText();

        if (passInput.isEmpty()) {
            pass.setForeground(mycolor);
            pw.setText("Password is required");
            pw.setForeground(mycolor);
        } else if (passInput.length() < 8) {

            pass.setForeground(mycolor);
            pw.setText("Password too short. 8 characters or more");
            pw.setForeground(mycolor);
        } else {
            pass.setForeground(Color.BLACK);
            pw.setText("");
        }
        pass.repaint();
    }//GEN-LAST:event_passFocusLost

    private void passActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
          dbConnector connector = new dbConnector();
    if (signUpValidation()) {
        connector.insertData("INSERT INTO user (u_fname, u_lname, u_email, u_number, u_username, u_roles, u_password, u_status) " +
    "VALUES ('" + firstname2.getText() + "','" + lastname1.getText() + "','" + email1.getText() + "','" +
    phonenumber.getText() + "','" + user.getText() + "','" + acct.getSelectedItem() + "','" + 
    pass.getText() + "','" + st.getSelectedItem() + "')");

        JOptionPane.showMessageDialog(this, "Registration successful!", "Success", JOptionPane.INFORMATION_MESSAGE);

        login lg = new login();

        this.dispose();

    } else {
        JOptionPane.showMessageDialog(this, "Registration failed!", "fail", JOptionPane.INFORMATION_MESSAGE);
    }
}
        private boolean signUpValidation() {
        boolean valid = true;

        String lname = lastname1.getText();

        if (lname.isEmpty()) {

            lastname1.setForeground(mycolor);
            ln.setText("This field is required");
            ln.setForeground(mycolor);

        } else {
            lastname1.setForeground(Color.BLACK);
            ln.setText("");
            ln.setForeground(mycolor);
        }

        lastname1.repaint();

        String fname = firstname2.getText();

        if (fname.isEmpty()) {
            firstname2.setForeground(mycolor);
            fn.setText("This field is required");
            fn.setForeground(mycolor);
        } else {
            firstname2.setForeground(Color.BLACK);
            fn.setText("");
            fn.setForeground(mycolor);
        }

        firstname2.repaint();

        String passInput = pass.getText();

        if (passInput.isEmpty()) {
            pass.setForeground(mycolor);
            pw.setText("Password is required");
            pw.setForeground(mycolor);
        }else if (duplicateChecker()){
            System.out.println("duplicate exist");
        }
        else if (passInput.length() < 8) {

            pass.setForeground(mycolor);
            pw.setText("Password too short. 8 characters or more");
            pw.setForeground(mycolor);
        } else {
            pass.setForeground(Color.BLACK);
            pw.setText("");
        }
        pass.repaint();
        
        String phoneRegex = "^[0-9]{11}$";
        String phoneInput = phonenumber.getText();

        if (phoneInput.isEmpty()) {

            phonenumber.setForeground(mycolor);
            pn1.setText("Number is required");
            pn1.setForeground(mycolor);

        } else if (!phoneInput.matches(phoneRegex)) {

            phonenumber.setForeground(mycolor);
            pn1.setText("Number is invalid");
            pn1.setForeground(mycolor);
        } else {

            phonenumber.setForeground(Color.BLACK);
            pn1.setText("");

        }

        phonenumber.repaint();
        return (valid);
    
    }//GEN-LAST:event_jButton2ActionPerformed

    private void userFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userFocusLost
        String lname = user.getText();

        if (lname.isEmpty()) {
            user.setForeground(mycolor);
            us.setText("This field is required");
            us.setForeground(mycolor);
        } else {
            user.setForeground(Color.BLACK);
            us.setText("");
            us.setForeground(mycolor);
        }

        user.repaint();
    }//GEN-LAST:event_userFocusLost

    private void userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userActionPerformed

    private void stActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stActionPerformed

    private void selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectActionPerformed
       JFileChooser fileChooser = new JFileChooser();
int returnValue = fileChooser.showOpenDialog(null);

if (returnValue == JFileChooser.APPROVE_OPTION) {
    try {
        File selectedFile = fileChooser.getSelectedFile();
        String path = selectedFile.getAbsolutePath();
        String destination = "src/userimages/" + selectedFile.getName();

        if (FileExistenceChecker(path) == 1) {
            JOptionPane.showMessageDialog(null, "File Already Exists. Rename or Choose another!");
            destination = "";
            path = "";
        } else {
            image.setIcon(ResizeImage(path, null, image));
            select.setEnabled(false);
           remove.setEnabled(true);
            
        }
    } catch (Exception ex) {
        System.out.println("File Error: " + ex.getMessage());
    }
}
    }//GEN-LAST:event_selectActionPerformed
public boolean duplicateChecker() {
    dbConnector dbc = new dbConnector();
String email;
    try {
        String query = "SELECT * FROM user WHERE u_username = '"  + "' OR u_email = '" + email1.getText() + "'";
        ResultSet resultSet = dbc.getData(query);

        if (resultSet.next()) {
            email = resultSet.getString("u_email");
            if (email.equals(email1.getText())) {
                JOptionPane.showMessageDialog(null, "Email already used!");
                email1.setText("");
            }
            
            return true;
        }
    } catch (SQLException ex) {
        System.out.println("Error: " + ex.getMessage());
    }
    return false;
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(add.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new add().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> acct;
    private javax.swing.JLabel backlogin;
    private javax.swing.JLabel cnumbertext;
    private javax.swing.JTextField email1;
    private javax.swing.JLabel emailtext;
    private javax.swing.JLabel errorLabelEmail;
    private javax.swing.JLabel errorType;
    private javax.swing.JTextField firstname2;
    private javax.swing.JLabel fn;
    private javax.swing.JLabel image;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField lastname1;
    private javax.swing.JLabel lastnametext;
    private javax.swing.JLabel ln;
    private javax.swing.JLabel logintext;
    private javax.swing.JPasswordField pass;
    private javax.swing.JLabel passwordtext;
    private javax.swing.JLabel passwordtext1;
    private javax.swing.JLabel passwordtext2;
    private javax.swing.JTextField phonenumber;
    private javax.swing.JLabel pn1;
    private javax.swing.JLabel pw;
    public javax.swing.JButton remove;
    public javax.swing.JButton select;
    private javax.swing.JComboBox<String> st;
    private javax.swing.JLabel us;
    private javax.swing.JTextField user;
    // End of variables declaration//GEN-END:variables
}
